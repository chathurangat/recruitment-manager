<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	   		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
			http://www.springframework.org/schema/security 
			http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <!-- To allow standards-based @Secured annotation -->
    <security:global-method-security secured-annotations="enabled" />

    <!-- This is where we configure Spring-Security  -->
    <security:http auto-config="true" use-expressions="true" access-denied-page="/user/auth/denied" >

        <security:form-login
                login-page="/user/auth/login"
                authentication-failure-url="/user/auth/login?error=true"
                default-target-url="/user/welcome"/>

        <security:logout
                invalidate-session="true"
                logout-success-url="/user/auth/login"
                logout-url="/user/auth/logout"/>

    </security:http>

    <!-- Declare an authentication-manager to use a custom userDetailsService -->
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider user-service-ref="facebookUserDetailsService">
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <!-- Use a Md5 encoder since the user's passwords are stored as Md5 in the database -->
    <bean class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" id="passwordEncoder"/>

    <bean id="facebookUserDetailsService" class="com.hsenidmobile.recruitment.web.service.FacebookUserDetailService"/>

</beans>
